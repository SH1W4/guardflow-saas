# TaskMash Executor - GuardFlow SaaS Super Escopo
# Executa o plano de desenvolvimento completo do SaaS

Write-Host "üöÄ TASKMASH EXECUTOR - GUARDFLOW SAAS SUPER ESCOPO" -ForegroundColor Green
Write-Host ""

# Verificar se Python est√° instalado
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python encontrado: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python n√£o encontrado. Instale Python 3.8+ primeiro." -ForegroundColor Red
    exit 1
}

# Verificar se arquivo TaskMash existe
$taskmashFile = "taskmash_saas_super_escopo.json"
if (-not (Test-Path $taskmashFile)) {
    Write-Host "‚ùå Arquivo TaskMash n√£o encontrado: $taskmashFile" -ForegroundColor Red
    Write-Host "üí° Certifique-se de que o arquivo existe no diret√≥rio atual." -ForegroundColor Yellow
    exit 1
}

# Verificar se script Python existe
$pythonScript = "scripts/execute_saas_taskmash.py"
if (-not (Test-Path $pythonScript)) {
    Write-Host "‚ùå Script Python n√£o encontrado: $pythonScript" -ForegroundColor Red
    Write-Host "üí° Certifique-se de que o script existe no diret√≥rio scripts/." -ForegroundColor Yellow
    exit 1
}

# Executar TaskMash
Write-Host "üöÄ Iniciando execu√ß√£o do TaskMash Super Escopo..." -ForegroundColor Green
Write-Host ""

try {
    python $pythonScript
    Write-Host ""
    Write-Host "‚úÖ TaskMash executado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao executar TaskMash: $_" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéØ Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "1. Revisar relat√≥rio de progresso" -ForegroundColor White
Write-Host "2. Implementar tarefas pendentes" -ForegroundColor White
Write-Host "3. Configurar ambiente de desenvolvimento" -ForegroundColor White
Write-Host "4. Iniciar desenvolvimento das APIs Backend" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ GuardFlow SaaS Super Escopo em execu√ß√£o!" -ForegroundColor Green
