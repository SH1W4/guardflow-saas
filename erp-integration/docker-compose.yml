version: '3.8'

services:
  erp-integration:
    build: .
    container_name: guardflow-erp-integration
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/guardflow_erp
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - guardflow-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: guardflow-erp-postgres
    environment:
      - POSTGRES_DB=guardflow_erp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - guardflow-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: guardflow-erp-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - guardflow-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: guardflow-erp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - erp-integration
    networks:
      - guardflow-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: guardflow-erp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - guardflow-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: guardflow-erp-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - guardflow-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  guardflow-network:
    driver: bridge

